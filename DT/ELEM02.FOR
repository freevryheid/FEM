      SUBROUTINE ELEM02(VCORE,VPRNE,VPREE,VDLE,VKE,VFE)
C=======================================================================
C     pg 201
C=======================================================================
C     8 NODES QUADRATIC ELEMENT FOR 2 DIMENSIONAL ELASTICITY
C          EVALUATE ELEMENT INFORMATIONS ACCORDING TO ICODE VALUE
C          ICODE=1 ELEMENT PARAMETERS
C          ICODE=2 INTERPOLATION FUNCTIONS AND GAUSS COEFFICIENTS
C          ICODE=3 STIFFNESS MATRIX
C          ICODE=4 TANGENT MATRIX ......NOT WRITTEN
C          ICODE=5 MASS MATRIX
C          ICODE=6 RESIDUALS
C          ICODE=7 SECOND MEMBER
C          ICODE=8 EVALUATE AND PRINT STRESSES
C      ELEMENT PROPERTIES
C          VPREE(1) YOUNG'S MODULUS
C          VPREE(2) POISSON'S COEFFICIENT
C          VPREE(3) .EQ.O PLANE STRESS
C                   .EQ.1 PLANE STRAIN
C          VPREE(4) SPECIFIC MASS
C=======================================================================
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON/COOR/NDIM
      COMMON/ASSE/NSYM
      COMMON/RGDT/IEL,ITPE,ITPE1,IGRE,IDLE,ICE,IPRNE,IPREE,INEL,IDEG,IPG
     1 ,ICODE,IDLE0,INEL0,IPG0
      COMMON/ES/M,MR,MP
      DIMENSION VCORE(*),VPRNE(*),VPREE(*),VDLE(*),VKE(*),VFE(*)
C.........CHARACTERISTIC DIMENSIONS OF THE ELEMENT
C     DIMENSION VCPG( IPG),VKPG(NDIM*IPG),VDE1(IMATD**2)
CADF      DIMENSION VCPG(9),VKPG(18),VDE1(9)
      DIMENSION VCPG(4),VKPG(8),VDE1(9)
C     DIMENSION VBE (IMATD*IDLE),VDE (IMATD**2),VJ (NDIM*NDIM),VJ1(NDIM*
      DIMENSION VBE(48),VDE(9),VJ(4),VJ1(4)
C     DIMENSION VNIX( INEL*NDIM),VNI ((1+NDIM)*INEL*IPG),IPGKED(NDIM)
CADF      DIMENSION VNIX(16),VNI(216),IPGKED(2)
      DIMENSION VNIX(16),VNI(96),IPGKED(2)
C         DIMENSION OF MATRIX D, NUMBER OF G.P.
CADF      DATA IMATD/3/,IPGKED/3,3/
      DATA IMATD/3/,IPGKED/2,2/
C.......
      DATA ZERO/0.D0/,DEUX/2.D0/,X05/0.5D0/,RADN/.572957795130823D2/
      DATA EPS/1.D-6/
      SQRT(X)=DSQRT(X)
      ATAN2(X,Y)=DATAN2(X,Y)
C
C-------  CHOOSE FUNCTION TO BE EXECUTED
C
      GO TO (100,200,300,400,500,600,700,800),ICODE
C
C-------  RETURN ELEMENT PARAMETERS IN COMMON 'RGDT'
C
100   IDLE0=16
      INEL0=8
CADF      IPG0=9
      IPG0=4
C     RETURN
C
C-------  EVALUATE COORDINATES, WEIGHTS, FUNCTIONS N AND THEIR
C-------  DERIVATIVES AT G.P.
C
200   CALL GAUSS(IPGKED,NDIM,VKPG,VCPG,IPG)
      IF(M.LT.2) GO TO 220
      WRITE(MP,2000) IPG
2000  FORMAT(/I5,'  GAUSS POINTS'/10X,'VCPG',25X,'VKPG')
      I0=1
      DO 210 IG=1,IPG
      I1=I0+NDIM-1
      WRITE(MP,2010) VCPG(IG),(VKPG(I),I=I0,I1)
210   I0=I0+NDIM
2010  FORMAT(1X,F20.15,5X,3F20.15)
220   CALL NI02(VKPG,VNI)
      IF(M.LT.2) RETURN
      I1=3*INEL*IPG
      WRITE(MP,2020) (VNI(I),I=1,I1)
2020  FORMAT(/' FUNCTIONS N AND DERIVATIVES'/ (1X,8E12.5))
      RETURN
C
C-------  EVALUATE ELEMENT STIFFNESS MATRIX
C
C-------  INITIALIZE VKE
300   DO 310 I=1,136
310   VKE(I)=ZERO
C-------  FORM MATRIX D
      CALL D02(VPREE,VDE)
      IF(M.GE.2) WRITE(MP,2030) (VDE(I),I=1,9)
2030  FORMAT(/' MATRIX D'/1X,9E12.5)
C-------  LOOP OVER THE G.P.
      I1=1+INEL
      DO 330 IG=1,IPG
C-------  EVALUATE THE JACOBIAN, ITS INVERSE AND ITS DETERMINANT
      CALL JACOB(VNI(I1),VCORE,NDIM,INEL,VJ,VJ1,DETJ)
      IF(DETJ.LT.EPS) WRITE(MP,2040) IEL,IG,DETJ
2040  FORMAT(' *** ELEM ',I5,' G.P. ',I3,' DET(J)=',E12.5)
      IF(M.GE.2) WRITE(MP,2050) VJ,VJ1,DETJ
2050  FORMAT(/' JACOBIAN=',4E12.5 / ' J INVERS=',4E12.5/' DETJ=',E12.5)
C-------  PERFORM D*COEF
      C=VCPG(IG)*DETJ
      DO 320 I=1,9
320   VDE1(I)=VDE(I)*C
C-------  FORM MATRIX B
      CALL DNIDX(VNI(I1),VJ1,NDIM,INEL,VNIX)
      IF(M.GE.2) WRITE(MP,2060) (VNIX(I),I=1,16)
2060  FORMAT(/' VNIX'/(1X,8E12.5))
      CALL B02(VNIX,INEL,VBE)
      IF(M.GE.2) WRITE(MP,2070) (VBE(I),I=1,48)
2070  FORMAT(/' MATRIX B'/(1X,10E12.5))
      CALL BTDB(VKE,VBE,VDE1,IDLE,IMATD,NSYM)
330   I1=I1+3*INEL
      RETURN
C
C-------  EVALUATE THE ELEMENT TANGENT MATRIX
C
400   CONTINUE
      RETURN
C
C-------  EVALUATE THE MASS MATRIX
C
500   DO 510 I=1,136
510   VKE(I)=ZERO
C-------  LOOP OVER THE G.P.
      IDIM1=NDIM-1
      IDECL=(NDIM+1)*INEL
      I1=1+INEL
      I2=0
      DO 550 IG=1,IPG
      CALL JACOB(VNI(I1),VCORE,NDIM,INEL,VJ,VJ1,DETJ)
      D=VCPG(IG)*DETJ*VPREE(4)
C-------  ACCUMULATE MASS TERMS
      IDL=0
      DO 540 J=1,INEL
      JJ=I2+J
      J0=1+IDL*(IDL+1)/2
      DO 530 I=1,J
      II=I2+I
      C=VNI(II)*VNI(JJ)*D
      VKE(J0)=VKE(J0)+C
      IF(NDIM.EQ.1) GO TO 530
      J1=J0+IDL+2
      DO 520 II=1,IDIM1
      VKE(J1)=VKE(J1)+C
520   J1=J1+J1+1
530   J0=J0+NDIM
540   IDL=IDL+NDIM
      I1=I1+IDECL
550   I2=I2+IDECL
      RETURN
C
C-------  EVALUATE THE ELEMENT RESIDUAL
C
C-------  FORM MATRIX D
600   CALL D02(VPREE,VDE)
C-------  INITIALIZE THE RESIDUAL VECTOR
      DO 610 ID=1,IDLE
610   VFE(ID)=ZERO
C-------  LOOP OVER THE G.P.
      I1=1+INEL
      DO 640 IG=1,IPG
C-------  EVALUATE THE JACOBIAN
      CALL JACOB(VNI(I1),VCORE,NDIM,INEL,VJ,VJ1,DETJ)
C-------  EVALUATE FUNCTIONS D(NI)/D(X)
      CALL DNIDX(VNI(I1),VJ1,NDIM,INEL,VNIX)
C-------  EVALUATE STRAINS AND STRESSES
      EPSX=ZERO
      EPSY=ZERO
      GAMXY=ZERO
      ID=1
      DO 620 IN=1,INEL
      UN=VDLE(ID)
      VN=VDLE(ID+1)
      C1=VNIX(IN)
      IN1=IN+INEL
      C2=VNIX(IN1)
      EPSX=EPSX+C1*UN
      EPSY=EPSY+C2*VN
      GAMXY=GAMXY+C1*VN+C2*UN
620   ID=ID+2
      C1=VCPG(IG)*DETJ
      C2=VDE(2)*C1
      C3=VDE(9)*C1
      C1=VDE(1)*C1
      SIGX=C1*EPSX+C2*EPSY
      SIGY=C2*EPSX+C1*EPSY
      TAUXY=C3*GAMXY
C-------  FORM THE RESIDUAL
      ID=1
      DO 630 IN=1,INEL
      C1=VNIX(IN)
      IN1=IN+INEL
      C2=VNIX(IN1)
      VFE(ID)=VFE(ID)+C1*SIGX+C2*TAUXY
      VFE(ID+1)=VFE(ID+1)+C2*SIGY+C1*TAUXY
630   ID=ID+2
640   I1=I1+3*INEL
      RETURN
C
C-------  EVALUATE VOLUMIC FORCES, FX,FY PER UNIT VOLUME
C         ( FOR GRAVITY FX=0 FY=-VPREE(4) )
C
700   FX=ZERO
      FY=-VPREE(4)
      DO 710 I=1,16
710   VFE(I)=ZERO
      I1=1
      IDECL=(NDIM+1)*INEL
      DO 730 IG=1,IPG
      CALL JACOB(VNI(I1+INEL),VCORE,NDIM,INEL,VJ,VJ1,DETJ)
      DX=VCPG(IG)*DETJ
      DY=DX*FY
      DX=DX*FX
      I2=I1
      I3=1
      DO 720 IN=1,INEL
      VFE(I3)=VFE(I3)+DX*VNI(I2)
      VFE(I3+1)=VFE(I3+1)+DY*VNI(I2)
      I2=I2+1
720   I3=I3+2
730   I1=I1+IDECL
      RETURN
C
C-------  EVALUATE AND PRINT STRESSES AT G.P.
C
800   WRITE(MP,2080) IEL
2080  FORMAT(//' STRESSES IN ELEMENT ',I5/
     1 '  P.G.',7X,'X',11X,'Y',9X,'EPSX',8X,'EPSY',7X,'GAMXY',8X,'SIGX',
     2 8X,'SIGY',7X,'TAUXY',8X,'TETA'/ 71X,'SIG1',8X,'SIG2',7X,'TAUMAX'
     3 /)
C-------  FORM THE MATRIX D
      CALL D02(VPREE,VDE)
C-------  LOOP OVER THE G.P.
      I1=1+INEL
      I2=0
      DO 820 IG=1,IPG
C-------  EVALUATE THE JACOBIAN
      CALL JACOB(VNI(I1),VCORE,NDIM,INEL,VJ,VJ1,DETJ)
C-------  EVALUATE FUNCTIONS D(NI)/D(X)
      CALL DNIDX(VNI(I1),VJ1,NDIM,INEL,VNIX)
C-------  COMPUTE STRAINS AND COORDINATES AT G.P.
      EPSX=ZERO
      EPSY=ZERO
      GAMXY=ZERO
      X=ZERO
      Y=ZERO
      ID=1
      DO 810 IN=1,INEL
      UN=VDLE(ID)
      VN=VDLE(ID+1)
      XN=VCORE(ID)
      YN=VCORE(ID+1)
      C1=VNIX(IN)
      IN1=IN+INEL
      C2=VNIX(IN1)
      IN1=IN+I2
      C3=VNI(IN1)
      EPSX=EPSX+C1*UN
      EPSY=EPSY+C2*VN
      GAMXY=GAMXY+C1*VN+C2*UN
      X=X+C3*XN
      Y=Y+C3*YN
810   ID=ID+2
C-------  COMPUTE THE STRESSES
      SIGX=VDE(1)*EPSX+VDE(2)*EPSY
      SIGY=VDE(2)*EPSX+VDE(1)*EPSY
      TAUXY=VDE(9)*GAMXY
C-------  COMPUTE THE PRINCIPAL STRESSES
      TETA=ATAN2(DEUX*TAUXY,SIGX-SIGY)*X05
      TETA=TETA*RADN
      C1=(SIGX+SIGY)*X05
      C2=(SIGX-SIGY)*X05
      TAUMAX=SQRT(C2*C2+TAUXY*TAUXY)
      SIG1=C1+TAUMAX
      SIG2=C1-TAUMAX
      WRITE(MP,2090) IG,X,Y,EPSX,EPSY,GAMXY,SIGX,SIGY,TAUXY,
     1  TETA,SIG1,SIG2,TAUMAX
2090  FORMAT(1X,I5,8E12.5,5X,F5.1/66X,3E12.5)
      I2=I2+3*INEL
820   I1=I1+3*INEL
      RETURN
      END
