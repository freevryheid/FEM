      SUBROUTINE EULER(VCORG,KDLNC,VDIMP,KNEQ,KLD,KLOCE,VCORE,VPRNE,
     1  VPREE,KNE,VKE,VME,VFE,VDLE,VKGS,VKGD,VKGI,VFG,VRES,VDLG,
     2  VDLE0,VDLG0,VFG0)
C=======================================================================
C     pg 433
C=======================================================================
C     ALGORITHM FOR EULER TYPE METHODS (IMPLICIT, EXPLICIT OR BOTH
C     ACCORDING TO OMEGA) FOR LINEAR OR NON LINEAR PROBLEMS.
C     THE NON LINEAR PROBLEM IS SOLVED BY A NEWTON-RAPHSON
C     METHOD
C       IMETH.EQ.1 STANDARD NEWTON-RAPHSON
C       IMETH.EQ.2 K IS CONSTANT
C       IMETH.EQ.3 K IS RECOMPUTED AT THE BEGINNING OF EACH STEP
C=======================================================================
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON/ASSE/NSYM,NKG
      COMMON/RESO/NEQ
      COMMON/NLIN/EPSDL,XNORM,OMEGA,XPAS,DPAS,DPAS0,NPAS,IPAS,NITER,
     1 ITER,IMETH
      COMMON/ES/M,MR,MP
      DIMENSION VCORG(*),KDLNC(*),VDIMP(*),KNEQ(*),KLD(*),KLOCE(*),
     1  VCORE(*),VPRNE(*),VPREE(*),KNE(*),VKE(*),VME(*),VFE(*),
     2  VDLE(*),VKGS(*),VKGD(*),VKGI(*),VFG(*),VRES(*),VDLG(*),
     3  VDLE0(*),VDLG0(*),VFG0(*)
      DATA ZERO/0.D0/,UN/1.D0/,EPS/1.D-13/
C-----------------------------------------------------------------------
C        DECIDE IF GLOBAL MATRIX IS TO BE REASSEMBLED
      ABS(X) = DABS(X)
      IKT=0
      IF(IMETH.EQ.1) GO TO 10
      IF(ABS(DPAS-DPAS0).GT.EPS.AND.ITER.EQ.1) GO TO 10
      IF(IMETH.EQ.3.AND.ITER.EQ.1) GO TO 10
      GO TO 20
10    IKT=1
C        INITIALIZE GLOBAL MATRIX TO ZERO IF NECESSARY
20    IF(IKT.EQ.0) GO TO 30
      CALL INIT(ZERO,NKG,VKGS)
      CALL INIT(ZERO,NEQ,VKGD)
      IF(NSYM.EQ.1) CALL INIT(ZERO,NKG,VKGI)
C        ASSEMBLE RESIDUALS AND GLOBAL MATRIX IF REQUIRED
30    CALL MAJ(UN,ZERO,NEQ,VFG0,VRES)
      CALL ASEULR(IKT,VCORG,KDLNC,VDIMP,KNEQ,KLD,KLOCE,VCORE,VPRNE,
     1 VPREE,KNE,VKE,VME,VFE,VDLE,VKGS,VKGD,VKGI,VFG,VRES,VDLG,
     2 VDLE0,VDLG0,VFG0)
      C1=UN
      IF(ITER.GT.1) C1=C1-OMEGA
      DO 40 I=1,NEQ
40    VRES(I)=DPAS*(VRES(I)-C1*VFG(I))
C        SOLVE
      CALL SOL(VKGS,VKGD,VKGI,VRES,KLD,NEQ,MP,IKT,1,NSYM,ENERG)
C        UPDATE THE SOLUTION
      CALL MAJ(UN,UN,NEQ,VRES,VDLG)
      RETURN
      END