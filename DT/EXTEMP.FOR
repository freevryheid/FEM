      SUBROUTINE EXTEMP(VCORG,KDLNC,VDIMP,KNEQ,KLD,KLOCE,VCORE,VPRNE,
     1  VPREE,KNE,VKE,VME,VFE,VDLE,VKGS,VKGD,VKGI,VFG,VRES,VDLG,
     2  VDLE0,VDLG0,VFG0)
C=======================================================================
C     pg 431
C=======================================================================
C     TO EXECUTE BLOCK 'TEMP'
C     TO SOLVE AN UNSTEADY PROBLEM (LINEAR OR NOT)
C=======================================================================
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON/RESO/NEQ
      COMMON/COND/NCLT,NCLZ,NCLNZ
      COMMON/ASSE/NSYM
      COMMON/NLIN/EPSDL,XNORM,OMEGA,XPAS,DPAS,DPAS0,NPAS,IPAS,NITER,
     1 ITER,IMETH
      COMMON/ES/M,MR,MP,M1,M2,M3,M4
      DIMENSION VCORG(*),KDLNC(*),VDIMP(*),KNEQ(*),KLD(*),KLOCE(*),
     1  VCORE(*),VPRNE(*),VPREE(*),KNE(*),VKE(*),VME(*),VFE(*),VDLE(*),
     2  VKGS(*),VKGD(*),VKGI(*),VFG(*),VRES(*),VDLG(*),VDLE0(*),
     3  VDLG0(*),VFG0(*)
      DATA ZERO/0.D0/,UN/1.D0/,EPS/1.D-13/
C-----------------------------------------------------------------------
      ABS(X) = DABS(X)
      DPAS0=ZERO
      XPAS=ZERO
      IPAS=0
C         READ INITIAL D.O.F. ON FILE M3
      IF(M3.EQ.0) GO TO 5
      REWIND M3
      READ(M3) (VDLG(I),I=1,NEQ)
      CALL MAJ(UN,ZERO,NEQ,VDLG,VDLG0)
C        SAVE THE REFERENCE LOAD CONDITIONS
5     CALL MAJ(UN,ZERO,NEQ,VFG,VFG0)
C         READ A CARD DEFINING A SET OF IDENTICAL STEPS
10    READ(M1,1000) DPAS,I1,I2,I3,X1,X2
1000  FORMAT(F10.0,3I5,2F10.0)
      IF(ABS(DPAS).LE.EPS) GO TO 140
      IF(I1.GT.0) NPAS=I1
      IF(I2.GT.0) NITER=I2
      IF(I3.GT.0) IMETH=I3
      IF(X1.GT.ZERO) EPSDL=X1
      IF(ABS(X2).GT.EPS) OMEGA=X2
C
C        LOOP OVER THE STEPS
C
      DO 130 IP=1,NPAS
      CALL INIT(ZERO,NEQ,VFG)
      IPAS=IPAS+1
      XPAS=XPAS+DPAS
      WRITE(MP,2000) IPAS,DPAS,XPAS,NITER,IMETH,EPSDL,OMEGA
2000  FORMAT(/1X,13('-'),'STEP NUMBER (IPAS):',I5//
     1                 14X,'INCREMENT                (DPAS)=',E12.5/
     2                 14X,'TOTAL LEVEL              (XPAS)=',E12.5/
     3                 14X,'NUMBER OF ITERATIONS     (NITER)=',I12/
     4                 14X,'METHOD NUMBER            (IMETH)=',I12/
     5                 14X,'TOLERANCE                (EPSDL)=',E12.5/
     6                 14X,'COEFFICIENT ALPHA        (OMEGA)=',E12.5/)
C
C          LOOP OVER EQUILIBRIUM ITERATIONS
C
      DO 110 ITER=1,NITER
C          CHOOSE THE METHOD
      IF(IMETH.GT.3) GO TO 20
C          EULER TYPE METHODS
      CALL EULER(VCORG,KDLNC,VDIMP,KNEQ,KLD,KLOCE,VCORE,VPRNE,VPREE,
     1  KNE,VKE,VME,VFE,VDLE,VKGS,VKGD,VKGI,VFG,VRES,VDLG,
     2  VDLE0,VDLG0,VFG0)
      GO TO 100
C         OTHER METHODS
20    CONTINUE
      WRITE(MP,2010) IMETH
2010  FORMAT(' ** ERROR, METHOD:',I3,' UNKNOWN')
      STOP
C        COMPUTE THE NORM
100   CALL NORME(NEQ,VRES,VDLG,XNORM)
      IF(M.GT.0) WRITE(MP,2020) ITER,XNORM
2020  FORMAT(5X,'ITERATION (ITER):',I3,' NORM (XNORM)=',E12.5)
      IF(M.GE.2) CALL PRSOL(KDLNC,VCORG,VDIMP,KNEQ,VDLG)
      IF(XNORM.LE.EPSDL) GO TO 120
110   CONTINUE
C       END OF STEP
120   DPAS0=DPAS
      CALL MAJ(UN,ZERO,NEQ,VDLG,VDLG0)
      CALL PRSOL(KDLNC,VCORG,VDIMP,KNEQ,VDLG)
130   CONTINUE
      GO TO 10
C         SAVE THE SOLUTION ON FILE M4
140    IF(M4.NE.0) WRITE(M4) (VDLG(I),I=1,NEQ)
       RETURN
       END