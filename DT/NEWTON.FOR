      SUBROUTINE NEWTON(VCORG,KDLNC,VDIMP,KNEQ,KLD,KLOCE,VCORE,VPRNE,
     1  VPREE,KNE,VKE,VME,VFE,VDLE,VKGS,VKGD,VKGI,VFG,VRES,VDLG)
C=======================================================================
C     pg 427
C=======================================================================
C     ALGORITHM FOR NEWTON-RAPHSON TYPE METHODS
C       IMETH.EQ.1  COMPUTE K AT EACH ITERATION
C       IMETH.EQ.2  K IS CONSTANT
C       IMETH.EQ.3  RECOMPUTE K AT THE BEGINNING OF EACH STEP
C=======================================================================
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON/ASSE/NSYM,NKG
      COMMON/RESO/NEQ
      COMMON/NLIN/EPSDL,XNORM,OMEGA,XPAS,DPAS,DPAS0,NPAS,IPAS,NITER,
     1 ITER,IMETH
      COMMON/ES/M,MR,MP
      DIMENSION VCORG(*),KDLNC(*),VDIMP(*),KNEQ(*),KLD(*),KLOCE(*),
     1  VCORE(*),VPRNE(*),VPREE(*),KNE(*),VKE(*),VME(*),VFE(*),VDLE(*),
     2  VKGS(*),VKGD(*),VKGI(*),VFG(*),VRES(*),VDLG(*)
      DATA ZERO/0.D0/,UN/1.D0/
C-----------------------------------------------------------------------
C-----  DECIDE IF GLOBAL MATRIX IS TO REASSEMBLED
      IKT=0
      IF(IMETH.EQ.1) GO TO 10
      IF(IPAS.EQ.1.AND.ITER.EQ.1) GO TO 10
      IF(IMETH.EQ.3.AND.ITER.EQ.1) GO TO 10
      GO TO 20
10    IKT=1
C-----   INITIALIZE GLOBAL MATRIX TO ZERO IF IT IS TO BE ASSEMBLED
20    IF(IKT.EQ.0)GO TO 30
      CALL INIT(ZERO,NKG,VKGS)
      CALL INIT(ZERO,NEQ,VKGD)
      IF(NSYM.EQ.1) CALL INIT(ZERO,NKG,VKGI)
C-----   STORE LOADS IN THE RESIDUAL VECTOR
30    CALL MAJ(XPAS,ZERO,NEQ,VFG,VRES)
C        ASSEMBLE RESIDUAL VECTOR, AND EVENTUALLY THE GLOBAL MATRIX
      CALL ASNEWT(IKT,KLD,VDIMP,KLOCE,VCORE,VPRNE,VPREE,KNE,VKE,VFE,
     1 VKGS,VKGD,VKGI,VDLG,VDLE,VRES)
C-----   SOLVE
      CALL SOL(VKGS,VKGD,VKGI,VRES,KLD,NEQ,MP,IKT,1,NSYM,ENERG)
      IF(IKT.EQ.1.AND.M.GT.1) CALL PRPVTS(VKGD)
C-----   UPDATE THE SOLUTION
      CALL MAJ(OMEGA,UN,NEQ,VRES,VDLG)
      RETURN
      END                    