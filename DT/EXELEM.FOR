C
      SUBROUTINE EXELEM(VCORG,KDLNC,VPRNG,VPREG,KLOCE,VCORE,KNE,VPRNE,
     1                VPREE,KNEQ,KLD)
C=======================================================================
C     pg 396
C=======================================================================
C     TO EXECUTE RLOCK 'ELEM'
C     READ ELEMENTS DATA
C=======================================================================
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON/COOR/NDIM,NNT
      COMMON/PRND/NPRN
      COMMON/PREL/NGPE,NPRE
      COMMON/ELEM/NELT,NNEL,NTPE,NGRE,ME,NIDENT,NPG
      COMMON/ASSE/NSYM,NKG,NKE,NDLE
      COMMON/RGDT/IEL,ITPE,ITPE1,IGRE,IDLE,ICE,IPRNE,IPREE,INEL,IDEG,IPG
     1 ,ICODE,IDLE0,INEL0,IPG0
      COMMON/RESO/NEQ
      COMMON/ES/M,MR,MP,M1,M2
      DIMENSION VCORG(*),KDLNC(*),VPRNG(*),VPREG(*),KLOCE(*),VCORE(*),
     1          KNE(*),VPRNE(*),VPREE(*),KNEQ(*),KLD(*)
      DATA I10/10/,I15/15/
C-------------------------------------------------------------------------
C-------     INITIALIZE
      NDLE=0
      IELT=0
      NPG=0
      REWIND M2
      IF(M.GT.0) WRITE(MP,2000)
2000  FORMAT(//' ELEMENTS CARDS'/)
C-------     READ AN ELEMENT CARD
10    READ(M1,1000) IEL,IGEN,INCR,ITPE,IGPE,IGRE,(KNE(IN),IN=1,I10)
1000  FORMAT(16I5)
      IF(M.GT.0) WRITE(MP,2010) IEL,IGEN,INCR,ITPE,IGPE,IGRE,
     1                            (KNE(IN),IN=1,I10)
2010  FORMAT(' >>>>>',16I5)
      IF(IEL) 80,80,20
C-----      NUMRER OF NODES AND ADDITIONNAL CARDS AS REQUIRED
20    INEL=0
      I1=1
      I2=I10
30    DO 40 IN=I1,I2
      IF(KNE(IN).EQ.0) GO TO 50
      INEL=INEL+1
40    CONTINUE
      I1=I2+1
      I2=I1+I15
      READ(M1,1000) (KNE(IN),IN=I1,I2)
      IF(M.GT.0) WRITE(MP,2010) (KNE(IN),IN=I1,I2)
      GO TO 30
C-----     CHECKING
50    IF(INEL.GT.NNEL) CALL ERREUR(51,INEL,NNEL,1)
      IF(INCR.EQ.0) INCR=1
      IF(ITPE.EQ.0) ITPE=NTPE
      IF(IGPE.GT.NGPE) CALL ERREUR(53,IGPE,NGPE,1)
      IF(IGPE.EQ.0) IGPE=1
      IF(IGRE.GT.NGRE) CALL ERREUR(54,IGRE,NGRE,1)
C-----    ELEMENT GENERATION
      IF(IGEN.EQ.0) IGEN=1
      DO 70 IE=1,IGEN
      IF(IEL.GT.NELT) CALL ERREUR(55,IEL,NELT,1)
C------    GENERATE KLOCE AND UPDATE KLD
      CALL LOCELD(KDLNC,KNE,KNEQ,KLOCE,KLD)
C------    GENERATE ELEMENT COORDINATES AND PROPERTIES
      CALL XTRELM(IGPE,VCORG,VPRNG,VPREG,KNE,VCORE,VPRNE,VPREE)
C------    CHECK ELEMENT NODE NUMBERS AND D.O.F.
      IPG0=0
      ICODE=1
      CALL ELEMLB(VCORE,VPRNE,VPREE,VDLE,VKE,VFE)
      IF(INEL.EQ.INEL0.AND.IDLE.EQ.IDLE0) GO TO 55
      WRITE(MP,2020) IEL,INEL,INEL0,IDLE,IDLE0
2020  FORMAT(' ** ELEMENT',I5,' INCONSISTENT'/5X,'INEL=',I4,' INEL0=',I5
     1/ 5X,'IDLE=',I5,' IDLE0=',I5)
C-----    UPDATE TOTAL NUMBER OF INTEGRATION POINTS
55    NPG=NPG+IPG0
C-----    STORE ON ELEMENT FILE
      CALL WRELEM(M2,KLOCE,VCORE,VPRNE,VPREE,KNE)
      IELT=IELT+1
C-----    PRINT ELEMENT CHARACTERISTICS
      CALL PRELEM(KLOCE,VCORE,VPRNE,VPREE,KNE)
C-----    NEXT ELEMENT TO BE GENERATED OR READ
      DO 60 IN=1,INEL
60    KNE(IN)=KNE(IN)+INCR
      IF(IDLE.GT.NDLE) NDLE=IDLE
70    IEL=IEL+1
      GO TO 10
C-----    CHECK IF TOTAL NUMBER OF ELEMENT IS EXCEEDED
80    IF(IELT.NE.NELT) CALL ERREUR(57,IELT,NELT,1)
C-----    PRINT BAND HEIGHTS
      IMA=0
      IMO=0
      I1=NEQ+1
      DO 90 I=2,I1
      J=KLD(I)
      IF(J.GT.IMA)IMA=J
90    IMO=IMO+J
      C=IMO
      C=C/NEQ
      WRITE(MP,2030) C,IMA
2030  FORMAT(/15X,'MEAN BAND HEIGHT=',F8.1,' MAXIMUM=',I5)
      IF(M.GE.2) WRITE(MP,2040) (KLD(I),I=1,I1)
2040  FORMAT(//' TABLE OF BAND HEIGHTS'/(10X,20I5))
C-----   TRANSFORM KLD INTO ADDRESSES OF COLUMN TOP TERM
      IF(NSYM.EQ.0) NKE=(NDLE*(NDLE+1))/2
      IF(NSYM.EQ.1) NKE=NDLE*NDLE
      KLD(1)=1
      DO 100 ID=2,I1
100   KLD(ID)=KLD(ID-1)+KLD(ID)
      NKG=KLD(I1)-1
      IF(M.GE.2) WRITE(MP,2050) (KLD(ID),ID=1,I1)
2050  FORMAT(//' TABLE OF ADDRESSES OF COLUMN TOP TERMS  (LD)'/
     1 (10X,20I6))
      RETURN
      END